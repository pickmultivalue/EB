    SUBROUTINE EB_MERRMSG(MSG.PRE,MSG,MSG.POST,RESP,VALID.RESP)
    INCLUDE EB.EQUS EB.COMMONS
    GO MAIN$
!
!=========== Program's Purpose ===============
!
! Display error message
! If MSG.PRE<2> is not null then a bitmap is displayed
!  CASE BITMAP=1; BITMAP='INFO'
!  CASE BITMAP=2; BITMAP='QUES'
!  CASE BITMAP=3; BITMAP='EXCL'
!  CASE BITMAP=4; BITMAP='STOP'
!  CASE 1       ; bitmap name has been explicitly named
!
!=============================================
!
    INCLUDE EB.EQUS STD.EQUS
    INCLUDE EB.EQUS SCR.PARAMS
    INCLUDE EB.EQUS CRT.PARAMS
    INCLUDE EB.EQUS OTHER.PARAMS
    INCLUDE EB.EQUS SCREEN.PARAMS
    INCLUDE EB.EQUS COLOURS
    EQU SQ TO "'", DQ TO '"'
    EQU MAX TO 9999
    MAIN$:!
!
    DEFC INT JBASEEmulateGETINT(INT, INT)
    IF_COMPILED_PRIME=JBASEEmulateGETINT(30,2)
    am_start=IF_COMPILED_PRIME
    vm_start=IF_COMPILED_PRIME
    CRLF=CR:LF
    WINTEGRATE=0
    GUI=0
    INCLUDE EB.EQUS WIN.ARGS
    IF UNASSIGNED(RESP) THEN RESP=''
    IF RESP='' THEN RESP=VALID.RESP<2>
    VALID.RESP=VALID.RESP<1>
    IF RESP#'' AND VALID.RESP#'' THEN
        LOCATE RESP IN VALID.RESP<1,vm_start> SETTING VPOS ELSE RESP=''
    END
    IF MSG[1,2]='E$' OR MSG[1,2]='D$' THEN CALL EB_BLD_MSG(MSG)
    IF GUI THEN
        BEGIN CASE
        CASE VALID.RESP='Y':VM:'N'
            VALID.RESP=4
        CASE VALID.RESP='Y':VM:'N':VM:'C'
            VALID.RESP=3
        CASE VALID.RESP='OK'
            VALID.RESP=0
        CASE VALID.RESP=''
        END CASE
        IF VALID.RESP='' THEN MSG.TYPE='M' ELSE MSG.TYPE='m'
        MSG=SWAP(MSG,SVM,CRLF)
        CALL EB_GUI_SEND(MSG.TYPE,BELL:MSG:AM:VALID.RESP)
        CALL EB_GUI_SEND('r','')
        ECHO OFF
        LOOP
            INPUT RESP
            RESP=FIELD(FIELD(RESP,STX,2),';',2)
        UNTIL NUM(RESP) OR VALID.RESP='' DO REPEAT
        ECHO ON
        IF VALID.RESP#'' THEN CONVERT 7654321 TO 'NYITACO' IN RESP
        RETURN
    END
    CONVERT VM TO '' IN MSG
    IF NOT(INDEX(CLEOL,TRIM(MSG),1)) THEN
        IF FG_POPUP THEN
            CC=0; RR=FG_SCR.CO.ORDS<1,4>
            PRFX=STATUS.LINE<1,1>
            CRT PRFX:MSG:STATUS.LINE<1,2>:
        END ELSE
            CC=LEN(MSG)+1; RR=23
            FLD.COLOUR=FG_COLOURS<1,2,1>
            BACK.COLOUR=FG_COLOURS<1,2,2>
!
            SAVE.COLOURS=FG_CURR.COLOURS:AM:FG_PREV.COLOURS
            CRT @(0,23):FG:CLEOL:
            IF WHITE<1,1>#'' THEN CALL EB_CH_COLOUR(FLD.COLOUR,BACK.COLOUR)
            FG_CURR.COLOURS=SAVE.COLOURS<1>; FG_PREV.COLOURS=SAVE.COLOURS<2>
!
            CRT @(0,23):FG:MSG.PRE:MSG:MSG.POST:
        END
        IF VALID.RESP='' THEN L=0 ELSE
            IF VALID.RESP='OK' THEN VALID.RESP=''
            NBR.RESP=DCOUNT(VALID.RESP,VM)
            L=1
            FOR I=1 TO NBR.RESP WHILE L=1
                L=LEN(VALID.RESP<1,I>)
            NEXT I
        END
        RESP.CHK=VALID.RESP
        CONVERT VM TO '' IN RESP.CHK
        BEGIN CASE
        CASE VALID.RESP=''; INP.TYPE='AN'
        CASE VALID.RESP=OCONV(RESP.CHK,'MCU'); INP.TYPE='U'
        CASE VALID.RESP=OCONV(RESP.CHK,'MCN'); INP.TYPE='N'
        CASE 1; INP.TYPE='AN'
        END CASE
        LOOP
            IF L=1 THEN
                CALL EB_INPUT_ZERO(RESP,CC,RR,FG_INPUT.CODES,VALID.RESP:AM:AM:RESP,1)
            END ELSE
                CALL EB_WP(RESP,INP.TYPE,CC,RR,10,0)
            END
        UNTIL INDEX(VALID.RESP,RESP,1) OR VALID.RESP='' OR FG_ACT.CODE DO REPEAT
        IF FG_ACT.CODE THEN RESP=''
        FG_ACT.CODE=''
        IF FG_POPUP THEN
            PRFX=STATUS.LINE<1,1>
            CRT PRFX:STATUS.LINE<1,2>:
        END ELSE CRT @(0,RR):CLEOL:
        CRT FG_CURR.COLOURS:
    END
!
    RETURN
END
