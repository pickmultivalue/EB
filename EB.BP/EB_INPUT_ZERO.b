    SUBROUTINE EB_INPUT_ZERO(CHR,COL,ROW,CODES,SUBCODES,MAX.SUB)
    INCLUDE EB.EQUS EB.COMMONS
    GO MAIN$
!
!=========== Program's Purpose ===============
!
! No echo input prompt to return a value or
! a FG_ACT.CODE.
!
!=============================================
!
    INCLUDE EB.EQUS OTHER.PARAMS
    INCLUDE EB.EQUS SCREEN.PARAMS
    INCLUDE EB.EQUS CRT.PARAMS
    INCLUDE EB.EQUS EB.CHARS
    INCLUDE EB.EQUS ACT.CODES
    INCLUDE EB.EQUS STD.EQUS
    INCLUDE EB.OS.INCLUDES TODAYS.DATE
!INCLUDE jutil.h
    MAIN$:!
    DEFC INT JBASEEmulateGETINT(INT, INT)
    IF_COMPILED_PRIME=JBASEEmulateGETINT(30,2)
    am_start=IF_COMPILED_PRIME
    vm_start=IF_COMPILED_PRIME
!
!===================================================
    IF FG_TIMEDOUT THEN CHR=''; FG_ACT.CODE=FG_ABT.CODE; RETURN
!===================================================
!
    EQU RTN.VAL TO 13
    Timeout = 300
!
    SUB.CODES=SUBCODES
    NO.ECHO=SUB.CODES<4>
    DFLT.CHR=SUB.CODES<3>
    MATCH.SET=SUB.CODES<2>; SUB.CODES=SUB.CODES<1>
!
    IF SUB.CODES MATCHES "1X'-'1X" THEN
        SUB.CODE1=SEQ(FIELD(SUB.CODES,'-',1))
        SUB.CODE2=SEQ(SUB.CODES[COL2()+1,1])
        MAX.SUB=0
        SUB.JUST='R#1'
    END ELSE
        SUB.CODE1=-1; SUB.CODE2=-1
        IF NOT(MAX.SUB) THEN
            NBR.CODES=DCOUNT(SUB.CODES,VM)
            FOR S=1 TO NBR.CODES
                L=LEN(SUB.CODES<1,S>)
                IF L>MAX.SUB THEN MAX.SUB=L
            NEXT S
        END
        ALPHAS=SWAP(SUB.CODES,VM,'')
        ALPHAS=OCONV(ALPHAS,'MCA')
        CONV=(ALPHAS=OCONV(ALPHAS,'MCU'))
        SUB.JUST='R#':MAX.SUB
    END
    MAX.JUST='R#':FG_MAX.CHARS
    IF FG_MAX.CHARS>=MAX.SUB THEN MAX.LEN=FG_MAX.CHARS ELSE MAX.LEN=MAX.SUB
!
    IF FG_ACT.CODE THEN FG_LAST.ACT.CODE=FG_ACT.CODE; FG_ACT.CODE=FALSE
    SAVE.CODES=FG_INPUT.CODES
    FG_INPUT.CODES=CODES
    IF (COL:ROW)#'' THEN CRT @(COL,ROW):DFLT.CHR:
!INCLUDE EB.INCLUDES GET.CHR
    INCLUDE EB.INCLUDES INPUT.ZERO
    IF CHR.NBR=13 THEN CHR=DFLT.CHR
    ECHO ON
    FG_INPUT.CODES=SAVE.CODES
    RETURN
END
