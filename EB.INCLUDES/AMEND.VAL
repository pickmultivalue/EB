* @(#) AMEND.VAL Ported to jBASE 15:13:19  17 APR 2000
! Process 1 line
!
    SCRIPT=-1
    BEGIN CASE
    CASE FG_ACT=FG_LN.CMD
        FG_PROCESSING.FIELD=TRUE
        FG_PAGING=TRUE
        IF (TRIM(FG_SCR.TYPE<1,FG_FLD> 'R#2')[1,1])#'W' THEN
            JUST.LEN=FG_SCR.PAGE.LENS<1,FG_WINDOW>; JUST=FG_SCR.PAGE.JUSTS<1,FG_WINDOW>
            ORIG.LINE=''; CALL EB_READ_PANE
            FG_ACT=''
!
! process each field in the window
!
            FG_INPUT.POS=1; FG_INPUT.LIST=ST.WIN
            FOR FG_FLD=ST.WIN TO FI.WIN WHILE (FG_PROCESSING.FIELD AND FG_PAGING)
                GOSUB ENTER.FIELD
            NEXT FG_FLD
            IF FG_PAGING THEN
                FOR FG_FLD=ST.WIN TO FI.WIN
                    DFLD=FG_SCR.DATA.FLD<1,FG_FLD>; DAT(FG_FLD)<1,FG_PANE>=WIN.PANE(DFLD)
                NEXT FG_FLD
                IF FG_DISPLAY.LIST#'' THEN FG_REFRESH=6; CALL EB_REFRESH
            END
        END ELSE FG_FLD=ST.WIN; GOSUB ENTER.FIELD
        IF FG_NEXT.FLD THEN FG_FLD=FG_NEXT.FLD; GOSUB ENTER.FIELD
!
! Same as LN.CMD except continue processing subsequent lines
!
    CASE FG_ACT=FG_ULN.CMD
        FG_ACT=''; FG_PROCESSING.FIELD=TRUE; FG_PAGING=TRUE
        IF (TRIM(FG_SCR.TYPE<1,FG_FLD> 'R#2')[1,1])#'W' THEN
            JUST.LEN=FG_SCR.PAGE.LENS<1,FG_WINDOW>; JUST=FG_SCR.PAGE.JUSTS<1,FG_WINDOW>
            FG_INPUT.POS=1; FG_INPUT.LIST=ST.WIN
            LOOP
                ORIG.LINE=''; CALL EB_READ_PANE
                FOR FG_FLD=ST.WIN TO FI.WIN WHILE (FG_PROCESSING.FIELD AND FG_PAGING)
                    GOSUB ENTER.FIELD
                NEXT FG_FLD
            WHILE FG_PAGING AND FG_PANE<FG_NBR.PANES<1,FG_WINDOW> DO
                IF FG_PAGING THEN
                    FOR FG_FLD=ST.WIN TO FI.WIN
                        DFLD=FG_SCR.DATA.FLD<1,FG_FLD>; DAT(FG_FLD)<1,FG_PANE>=WIN.PANE(DFLD)
                    NEXT FG_FLD
                    IF FG_DISPLAY.LIST#'' THEN FG_REFRESH=6; CALL EB_REFRESH
                END
                FG_PANE=FG_PANE+1
            REPEAT
            FG_PAGING=FALSE
        END ELSE FG_FLD=ST.WIN; GOSUB ENTER.FIELD
        IF FG_NEXT.FLD THEN FG_FLD=FG_NEXT.FLD; GOSUB ENTER.FIELD
!
! Insert a line
!
    CASE FG_ACT=FG_INS.CMD
        IF FG_SCR.PAGE.MAX<1,FG_WINDOW>#'' AND FG_NBR.PANES<1,FG_WINDOW>>=FG_SCR.PAGE.MAX<1,FG_WINDOW> THEN
            CALL EB_ERRMSG(FG_ERROR.MSGS<10>)
            CALL EB_INPUT_ZERO(FG_ACT,60,23,FG_INPUT.CODES,'',0)
        END ELSE
            FG_AMEND=FALSE; FG_PAGING=TRUE; FG_FLD=ST.WIN; FG_INPUT.POS=1; FG_INPUT.LIST=FG_FLD; FG_WINDOW=FG_SCR.PAGING<1,FG_FLD>
            IF (TRIM(FG_SCR.TYPE<1,FG_FLD> 'R#2')[1,1])#'W' THEN
                MAT WIN.PANE=''; FG_INS.PANE=FG_PANE; GOTO START
            END ELSE GOSUB ENTER.FIELD; FG_AMEND=TRUE; FG_INS.PANE=0
        END
!
! Delete 1 or more lines
!
    CASE FG_ACT=FG_DLN.CMD
        IF TOTAL.PANES-LAST.LINE<FG_SCR.PAGE.MIN<1,FG_WINDOW> THEN
            CALL EB_ERRMSG(FG_ERROR.MSGS<11>:FG_SCR.PAGE.MIN<1,FG_WINDOW>)
            CALL EB_INPUT_ZERO(FG_ACT,60,23,FG_INPUT.CODES,'',0)
        END ELSE
            TOTAL.LIST=''; FG_LAST.PANE<1,FG_WINDOW>=FG_NBR.PANES<1,FG_WINDOW>
            IF FG_PANE#'' THEN
                IF LAST.LINE='' THEN LAST.LINE=FG_PANE
                GOSUB DELETE.LINES; IF FG_REFRESH=3 THEN GOSUB DEL.LINE.WRAP
            END ELSE
                IF INDEX(FG_HILINE<1,FG_WINDOW>,1,1) THEN
                    CALL EB_ERRMSG(FG_ERROR.MSGS<72>)
                    CALL EB_INPUT_ZERO(ANS,60,23,FG_INPUT.CODES,'N':VM:'T':VM:'U':AM:AM:'N',1)
                    DUMMY=INDEX('TU',ANS,1)
                    IF DUMMY THEN
                        DUMMY=MOD(DUMMY,2); ST=0; LAST.LINE=1; STMP=FG_HILINE<1,FG_WINDOW>
                        IF DUMMY THEN FI=DCOUNT(STMP,SVM) ELSE FI=FG_NBR.PANES<1,FG_WINDOW>
                        FOR FG_PANE=FI TO 1 STEP -1
                            IF STMP<1,1,FG_PANE>+0=DUMMY THEN GOSUB DELETE.LINES; IF FG_VALID THEN FG_DISPLAY.LIST<FG_WINDOW+1>=FG_PANE; ST=ST+1
                        NEXT FG_PANE
                        LAST.LINE=ST; IF FG_REFRESH=3 THEN GOSUB DEL.LINE.WRAP
                    END
                END
            END
        END
!
! Tag 1 or more lines
!
    CASE FG_ACT=FG_TAG.CMD
        STMP=FG_HILINE<1,FG_WINDOW>
        FI=NOT(STMP<1,1,FG_PANE>)
        FOR I=FG_PANE TO LAST.LINE
            STMP<1,1,I>=FI; FG_DISPLAY.LIST<1,-1>=I
        NEXT I
        FG_HILINE<1,FG_WINDOW>=STMP; FG_REFRESH=7; CALL EB_REFRESH
!
! Scroll forward or back current window
!
    CASE FG_ACT=FG_FWD.CMD OR FG_ACT=FG_BCK.CMD
        CALL EB_SCROLL_WINDOW(TOTAL.PANES)
!
! Replace string over multiple lines
!
    CASE FG_ACT=FG_REP.CMD
        STMP=FG_INPUT.CODES; FG_INPUT.CODES=FG_REPLACE.CODES
        CRT @(0,22):FG_ERROR.MSGS<4>:CLEOL:
        CALL EB_WP(OLD,'LIT',19,22,20,0); FG_INPUT.CODES=STMP
        IF FG_ACT.CODE THEN
            INCLUDE EB.INCLUDES ON.INP
            IF FG_ABORTED THEN GOTO AMEND.INPUT
        END
        IF OLD#'' THEN
            CRT @(0,22):FG_ERROR.MSGS<5>:CLEOL:
            FG_INPUT.CODES=FG_REPLACE.CODES
            CALL EB_WP(NEW,'LIT',19,22,20,0); FG_INPUT.CODES=STMP
            IF FG_ACT.CODE THEN
                INCLUDE EB.INCLUDES ON.INP
                IF FG_ABORTED THEN GOTO AMEND.INPUT
            END
            IF OLD#NEW THEN CALL EB_REPLACE(OLD,NEW,LAST.LINE)
        END
!
! Move or Copy fields
!
    CASE FG_ACT=FG_MV.CMD OR FG_ACT=FG_CP.CMD
        CALL EB_MV_LINES(TOTAL.PANES,NEW.PANE,LAST.LINE)
    END CASE
