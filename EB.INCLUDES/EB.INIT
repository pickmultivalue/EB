* @(#) EB.INIT Ported to jBASE 15:13:20  17 APR 2000
*  The following variable names were converted
*   CHECKSUM
*
  IF SYSTEM(11) THEN
    EOF=0
    LOOP
      READNEXT ITNM THEN
        FG$SENTENCE:=' ':ITNM
      END ELSE EOF=1
    UNTIL EOF DO REPEAT
  END
  FG$SENTENCE=TRIM(FG$SENTENCE)
  NBR.WORDS=DCOUNT(FG$SENTENCE,' ')
  INCLUDE EB.OS.INCLUDES EB.INIT
  INCLUDE EB.OS.INCLUDES OS.ERRORS
  INCLUDE EB.EQUS STD.EQUS
  CALL EB_OPEN('','MD',F.MD,1,0)
  CALL EB_OPEN('','EB.EQUS',FG$EQUS,1,0)
  CALL EB_OPEN('','EB.SECURITY',FG$SECURITY,1,0)
  CALL EB_OPEN('','EB.USERS',FG$USERS,1,0)
  CALL EB_OPEN('','GLOBAL.BTREEDEFS',B$BTREEDEFS,1,0)
  CALL EB_OPEN('','JET.PASTE',JET.PASTE,1,0)
  CALL EB_OPEN('','EB.CONTROL',FG$EB.CONTROL,0,POS)
  IF POS THEN
    READV APPLICATION.CODES FROM FG$EB.CONTROL,'APPLICATIONS',1 ELSE APPLICATION.CODES=''
    READV PATCH.TYPES FROM FG$EB.CONTROL,'PATCH.TYPES',1 ELSE STOP RDER,'EB.CONTROL, PATCH.TYPES'
    READ BP.FILES FROM FG$EB.CONTROL,'BP.FILES' ELSE BP.FILES=''
  END ELSE
    APPLICATION.CODES=''; FG$SEC.LEVEL=''
    PATCH.TYPES=''
  END
  CALL EB_OPEN('','EB.PROCESSES',FG$PROCESSES,0,POS)
  IF POS ELSE FG$PROCESSES=JET.PASTE
  CALL EB_OPEN('','EB.HELP.DOC,ENG',FG$HELP.DOC,0,POS)
  IF POS THEN
    OPEN.HELP=TRUE
    FG$EB.HELP=FG$HELP.DOC
    CALL EB_OPEN('','EB.HELP.INDEX,ENG',FG$EB.HELP.INDEX,0,POS)
    IF POS ELSE FG$EB.HELP.INDEX=FG$EB.HELP
  END ELSE OPEN.HELP=FALSE
  ITNM=FG$SENTENCE
  CALL EB_UT_INIT(MAT EB$CHARS,MAT OTHER.PARAMS,'','','','',FG$EB.PARAMS)
  FG$SENTENCE=ITNM
  READ FG$ERROR.MSGS FROM FG$EB.PARAMS,'ERROR.MSGS*ENG' ELSE NULL
  INCLUDE EB.EQUS SCREEN.PARAMS
  MATREAD SCREEN.PARAMS FROM FG$EB.PARAMS,'CRT*':FG$TERM.TYPE ELSE STOP "I don't know your CRT type (":FG$TERM.TYPE:")"
  INCLUDE EB.OS.INCLUDES TERM.SETTINGS
  MAT SCR.CRT.PARAMS=''; MAT DRV.PARAMS=''; MAT SCR.PARAMS=''; MAT CRT.PARAMS=''
!  CRT @(0,(PDEPTH-1)):'GALA using EB.CHARS*':FG$KEYBOARD:' CRT*':FG$TERM.TYPE:
  FG$CRT.PAGES='RTED'
  FG$CRT.PAGE=1
  MATREAD COLOURS FROM FG$EB.PARAMS,'COLOUR*':FG$TERM.TYPE ELSE MAT COLOURS=''
  IF EMBED.ATTR<1,1> THEN HLON=RVON; HLOFF=RVOFF ELSE HLON=BG; HLOFF=FG
  INCLUDE EB.EQUS COLOURS
  IF WHITE<1,1>#'' THEN
    INCLUDE EB.EQUS COLOUR.CODES
    IF WHITE<1,1>#'' THEN CALL EB_CH_COLOUR(WHITE<1,1>,BLUE<1,2>)
    FG$CHOICE.COLOURS=WHITE<1,1>:VM:RED<1,2>:VM:YELLOW<1,1>
  END
  INCLUDE EB.EQUS EB.CHARS
  INCLUDE EB.EQUS ACT.CODES
  CYCLES=FG$OPT.CODE:AM:FG$SKP.CODE:AM:FG$BCK.CODE:AM:FG$NXT.KEY.CODE:AM:FG$PRV.KEY.CODE
  IF CURS.BLOCK<1,1>='' THEN CURS.INS=@(75,(PDEPTH-1)):' ':'Ins':CLEOL ELSE CURS.INS=CURS.BLOCK<1,1>
  IF CURS.LINE<1,1>='' THEN CURS.RPL=@(75,(PDEPTH-1)):' ':FLSH:'Rpl':NFLSH:CLEOL ELSE CURS.RPL=CURS.LINE<1,1>
  IF CURS.ON#CURS.LINE<1,1> THEN CURS.INS:=CURS.ON
  CURS.RPL:=CURS.ON
  INP.SUB=0
  INS.MODE=1
  DIM RPL.PARMS(3),RPL.PROMPTS(3),RPL.COLS(3)
  EQU WHOLE TO RPL.PARMS(1)
  EQU ALOC TO RPL.PARMS(2)
  EQU CONFIRM TO RPL.PARMS(3)
  RPL.PROMPTS(1)="Whole Words ? "
  RPL.PROMPTS(2)="All Occurences on a line ? "
  RPL.PROMPTS(3)="Confirm Each Replacement ? "
  FOR I=1 TO 3
    RPL.COLS(I)=LEN(RPL.PROMPTS(I))
  NEXT I
  DSPLY=''; ERR.NOS=241; SECRET=0
  PR="--Press <RETURN>"
  CONV.TYPE="MCU"
  MSG.AKN=@(0,(PDEPTH-1))
  MSG.CLR=MSG.AKN:CLEOP
  EQU DELIMS TO ' ():;+-*/,&!^#=<>[]@'
  EQU OTHER.MARGIN TO CHAR(22)        ;*Control V
  EQU REP.STR TO CHAR(18)   ;* Control R
  BS.CH=FG$BS.CH
  SUB.CODES=BS.CH:VM:REP.STR:VM:OTHER.MARGIN
  READ ALPHA.CHARS FROM FG$EB.PARAMS,'ALPHA.CHARS' ELSE
    ALPHA.CHARS=''
    FOR I=32 TO 126; ALPHA.CHARS<1,-1>=CHAR(I); NEXT I
    WRITE ALPHA.CHARS ON FG$EB.PARAMS,'ALPHA.CHARS'
  END
  SUB.CODES<1,-1>=ALPHA.CHARS
  PROMPT ''
!  FG$TLINE=OCONV(FG$TLINE,'MCN')
  IF FG$TLINE='' THEN FG$TLINE=0
  IF FG$TUSER='' THEN
    INCLUDE EB.OS.INCLUDES WHO
    READV DUMMY FROM FG$SECURITY,FG$TACC.NAME,1 THEN
      FG$TUSER=FG$TACC.NAME
    END ELSE FG$TUSER='SCL'
  END
  READV FG$SEC.LEVEL FROM FG$SECURITY,FG$TUSER,4 ELSE FG$SEC.LEVEL=''
  READV FG$USER.NAME FROM FG$USERS,FG$TUSER,1 ELSE FG$USER.NAME=''
  READV SITE.NAME FROM FG$EB.CONTROL,'SITE',1 ELSE SITE.NAME='Site Unkown'
  CALL EB_OPEN('',FG$TUSER:'.PATCHES',F.PATCHFILE,0,POS)
  IF POS THEN
    OPEN.PATCH=TRUE
  END ELSE OPEN.PATCH=FALSE
  WORKFILENAME='EB.WORK,':FG$TLINE
  CALL EB_OPEN('',WORKFILENAME,FG$WORK.FILE,0,POS)
  IF POS THEN
    READ EB.VARS FROM FG$WORK.FILE,'EB.VARS' ELSE EB.VARS=''
  END ELSE FG$WORK.FILE=JET.PASTE
  READ BASE.ITEM FROM FG$EQUS,'BASE' THEN
    DEL BASE.ITEM<1>
    A=1
    LOOP
      LINE=BASE.ITEM<A>
    WHILE LINE[1,1]='*' DO
      BEGIN CASE
        CASE INDEX(LINE,'Author',1)
          LINE:=' ':FG$USER.NAME
        CASE INDEX(LINE,'Date Written',1)
          LINE:=' ':TIMEDATE()
        CASE INDEX(LINE,'Standard program banner',1)
          LINE='* <enter program function here>'
      END CASE
      BASE.ITEM<A>=LINE
      A+=1
    REPEAT
    LAM=DCOUNT(BASE.ITEM,AM)
    FOR I=A TO LAM; DEL BASE.ITEM<A>; NEXT I
  END ELSE BASE.ITEM=''
  INPTYPE='AN'
  DEL.LIST=''
  PREV.FLNM=""; PREV.ITNM=""; MITNM=''; MFLNM=''
  PREV.FLNM=""; PREV.ITNM=""; MITNM=''; MFLNM=''
  CUT.POS=''; MARKERS=''
  LMARGIN=''
  INCLUDE EB.OS.INCLUDES EB.LMARGIN
  READV ITAB FROM FG$EB.PARAMS,'EB.ITAB',1 ELSE ITAB=2
  MAT OPENED.FILES=''; OPEN.FILE.LIST=''
  IF MOD(FG$STERM,3) THEN
    CALL EB_AT_WINDOW_OPEN(PDEPTH+1,PWIDTH+1,1,1,1,'',ITNM,1)
    CALL EB_STERM_MENU('EB.MENU','','',1,'')
    CSI=ESC:'['; APC=ESC:'_'; ST=ESC:'\'
    LEADIN=CSI:'='
    CRT LEADIN:'1;6O':    ;! return co-ords on single click
    CRT APC:'6;0O':ST:
    CRT APC:'1O|AM':ST:
  END
  EQU RTN.VAL TO 13
  DIM PATCH(11)
  EQU SPRNO TO PATCH(1)
  EQU APPL TO PATCH(2)
  EQU DESCRIPTION TO PATCH(3)
  EQU TYPE TO PATCH(4)
  EQU Checksum TO PATCH(8)
  EQU CHANGED.BY TO PATCH(9)
  EQU REL.NO TO PATCH(10)
  CODES=FG$INPUT.CODES
  SUB.CODE1=-1; SUB.CODE2=-1
  MATCH.SET=''
  READV FG$TIMEOUT FROM FG$EB.PARAMS,FG$TUSER:'.EB',1 ELSE FG$TIMEOUT=300
  FG$MONITOR.SECS=FG$TIMEOUT
  INCLUDE EB.OS.INCLUDES SET.TIMEOUT
  INCLUDE EB.OS.INCLUDES TIMEOUT.ON
!
  MAX.SUB=1
  SUB.JUST='R#1'
  CONV=0
  MAX.JUST='R#':FG$MAX.CHARS
  IF FG$MAX.CHARS>MAX.SUB THEN MAX.LEN=FG$MAX.CHARS+FG$EXPECT.CR*0 ELSE MAX.LEN=MAX.SUB
!
  PREV.CHARS=''
  PREV.SUBS=''
  DFLT.LINE=''
  LAST.DESC=''
  HEX.MODE=FALSE
!
  IF FG$SENTENCE[1,1]#OCONV(FG$SENTENCE[1,1],'MCU') THEN FG$SENTENCE=OCONV(FG$SENTENCE,'MCU')
  INCLUDE EB.OS.INCLUDES BACKGROUND.VERB
  WCNT=3
  ITNM=''
  FLNM=FIELD(FG$SENTENCE," ",2); ITNM=FIELD(FG$SENTENCE," ",WCNT)
  IF FLNM="DICT" THEN
    FLNM='DICT ':ITNM
    WCNT+=1
    ITNM=FIELD(FG$SENTENCE," ",WCNT)
  END
  END.WORDS='END':AM:'NEXT':AM:'UNTIL':AM:'WHILE'
  USEMODE=''; PASSWD=''
  CALL EB_OPEN('','UPG.WORKFILE',F.UPG.WORKFILE,0,UPG)
  INCLUDE UPG.DEFS ENCRYPT.MESG
